{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"n",
				"nProducts"
			],
			[
				"iP",
				"iProduct"
			],
			[
				"lN",
				"lNonTerminals"
			],
			[
				"nN",
				"nNonTerminals"
			],
			[
				"ptr",
				"ptrFile"
			],
			[
				"l",
				"lEntry"
			],
			[
				"o",
				"oMe"
			],
			[
				"nI",
				"nSize"
			],
			[
				"ch",
				"chunk"
			],
			[
				"sM",
				"SMalloc"
			],
			[
				"nB",
				"nByte"
			],
			[
				"nb",
				"nByte"
			],
			[
				"Sm",
				"SMalloc"
			],
			[
				"nS",
				"nSize"
			],
			[
				"F",
				"FMemory"
			],
			[
				"New",
				"NewFFlag"
			],
			[
				"SM",
				"SMalloc"
			],
			[
				"uns",
				"unsigned"
			],
			[
				"arg",
				"argc"
			],
			[
				"FD",
				"FDecayClosureFlag"
			],
			[
				"_ptr",
				"_ptrLast"
			],
			[
				"_pt",
				"_ptrFirst"
			],
			[
				"_",
				"_ptrLast"
			],
			[
				"oF",
				"oFirst"
			],
			[
				"_p",
				"_ptrLast"
			],
			[
				"_F",
				"_FQueue"
			],
			[
				"in",
				"inc\t#include \"…\""
			],
			[
				"Com",
				"CompareFunction"
			],
			[
				"i",
				"iIndex"
			],
			[
				"pt",
				"ptrNew"
			],
			[
				"ON",
				"OnEvent"
			],
			[
				"On",
				"OnEvent"
			],
			[
				"E",
				"eEvent"
			],
			[
				"Fu",
				"Function"
			],
			[
				"Func",
				"lFunction"
			],
			[
				"FE",
				"FEvent"
			],
			[
				"FEv",
				"FEventInitialize"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"N",
				"NTRIPLE"
			],
			[
				"is",
				"isMatch"
			],
			[
				"AC",
				"ACT_SYMS0"
			],
			[
				"NSY",
				"NSYMS"
			],
			[
				"oS",
				"oSequenceL"
			],
			[
				"oA",
				"oAlignment"
			],
			[
				"ACT",
				"ACT_INSERT"
			],
			[
				"ACT_MA",
				"ACT_MATCH"
			],
			[
				"Act",
				"ACT_INSERT"
			],
			[
				"iL",
				"iLenght"
			],
			[
				"oT",
				"oTriple"
			],
			[
				"si",
				"sizeof"
			],
			[
				"Seq",
				"oSequenceL"
			],
			[
				"oSe",
				"oSequenceS"
			],
			[
				"S",
				"SYMGAP"
			],
			[
				"p",
				"ptrVersion"
			],
			[
				"_FE",
				"_FTypeHeader"
			],
			[
				"str",
				"struct\tstruct"
			],
			[
				"oL",
				"oAlignment"
			],
			[
				"nL",
				"nLength"
			],
			[
				"DIs",
				"DisplayWeight"
			],
			[
				"NS",
				"NSYMS"
			],
			[
				"sFil",
				"sFileWeightMap"
			],
			[
				"nM",
				"nMin"
			],
			[
				"Fr",
				"FreeFScore"
			],
			[
				"FS",
				"FScore"
			],
			[
				"r",
				"return"
			],
			[
				"s",
				"struct\tstruct"
			],
			[
				"oP",
				"oPointer"
			],
			[
				"nP",
				"nParticles"
			],
			[
				"EF",
				"EFLAG"
			],
			[
				"raw",
				"rawFrom"
			],
			[
				"nLay",
				"nLayer"
			],
			[
				"la",
				"lLayers"
			],
			[
				"NN",
				"NN_RESOLUTION"
			],
			[
				"nRe",
				"nResolution"
			],
			[
				"Con",
				"ConvNeuron"
			],
			[
				"ic",
				"inc\t#include \"…\""
			],
			[
				"G",
				"GenerateFTN"
			],
			[
				"nT",
				"nTransitivity"
			],
			[
				"FT",
				"FTN"
			],
			[
				"Monte",
				"MonteCarlo"
			],
			[
				"dM",
				"dMin"
			],
			[
				"oC",
				"oCopyTo"
			],
			[
				"lF",
				"lFTNPD"
			],
			[
				"lFT",
				"lFT0PD"
			],
			[
				"Lf",
				"lFT0D"
			],
			[
				"GEN",
				"GENERATE_NTESTS"
			],
			[
				"iM",
				"iMin"
			],
			[
				"im",
				"iMax"
			],
			[
				"Gere",
				"GenerateFT0"
			],
			[
				"D",
				"DSRand"
			],
			[
				"Prin",
				"printf"
			],
			[
				"pte",
				"ptrFile"
			],
			[
				"Gene",
				"GenerateFT0"
			],
			[
				"iId",
				"iIndex"
			],
			[
				"oData",
				"oDataRead"
			],
			[
				"print",
				"printf\tprintf …"
			],
			[
				"do",
				"double"
			],
			[
				"oD",
				"oDeserialize"
			],
			[
				"SE",
				"SERIALIZE_TYPE_FMETA"
			],
			[
				"Fx_",
				"Fx_PrintData"
			],
			[
				"oH",
				"oHeader"
			],
			[
				"nBytesOff",
				"nBytesOffsetsName"
			],
			[
				"siz",
				"sizeof"
			],
			[
				"ma",
				"malloc"
			],
			[
				"en",
				"entrys"
			],
			[
				"pr",
				"predicates"
			],
			[
				"sy",
				"symbole_stack"
			],
			[
				"for",
				"for\tFor Loop"
			],
			[
				"sym",
				"symbole"
			],
			[
				"symbol",
				"symbol_stack"
			],
			[
				"T",
				"TZERO"
			],
			[
				"st",
				"struct\tstruct"
			],
			[
				"pa",
				"particles"
			],
			[
				"un",
				"unsigned"
			],
			[
				"EI",
				"EXIT_SUCCES"
			],
			[
				"FV",
				"FValue"
			],
			[
				"re",
				"readfile\tRead File Into Vector"
			],
			[
				"pdb",
				"pdbParticle"
			],
			[
				"map",
				"mapParticles"
			],
			[
				"Ne",
				"NeuralNetworkBuilder"
			],
			[
				"lC",
				"lConnections"
			],
			[
				"Neu",
				"NeuralNetwork"
			],
			[
				"BUILDER",
				"BUILDERNEURON_HIDDEN"
			],
			[
				"TLU",
				"TLUNetworkBuilder"
			],
			[
				"lCo",
				"lConnections"
			],
			[
				"a_l",
				"a_lNeurons"
			],
			[
				"a_lCo",
				"a_lConnections"
			],
			[
				"dD",
				"dDecayBound"
			]
		]
	},
	"buffers":
	[
		{
			"file": "LanguagesAndMachines/LanguagesAndMachines.c",
			"settings":
			{
				"buffer_size": 184,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "LanguagesAndMachines/src/FGrammar.h",
			"settings":
			{
				"buffer_size": 956,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#ifndef FCHANNEL_H\n#define FCHANNEL_H\n\n#include <stdio.h>\n\ntypedef struct FParticleInitialize\n{\n\tunsigned int nChannel;\n} FParticleInitialize;\n\ntypedef struct FParticle\n{\n\t/* TODO more */\n} FParticle;\n\nFParticle* NewFParticle(unsigned int nChannel, unsigned int nSize);\nvoid FreeFParticle(FParticle* lMe, unsigned int nSize);\n\nvoid SerializeFParticle(FParticle* lMe, unsigned int nSize, FILE* ptrFile);\nFParticle* DeserializeFParticle(FParticle* lInto, unsigned int* ptrSize, FILE* ptrFile);\n\n#endif",
			"file": "/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.h",
			"file_size": 619,
			"file_write_time": 131373375155840046,
			"settings":
			{
				"buffer_size": 499,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.c",
			"settings":
			{
				"buffer_size": 1027,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/C++11/C++11.sublime-build",
					""
				],
				[
					"Packages/C++11/C++11.sublime-build",
					"Run"
				],
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					""
				],
				[
					"Packages/CUDA C++/cuda-c++.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "c",
		"selected_items":
		[
			[
				"c",
				"Set Syntax: C"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Insta",
				"Package Control: Install Package"
			],
			[
				"sy",
				"Set Syntax: C++"
			],
			[
				"C",
				"Build With: C++11"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"Ins",
				"Package Control: Install Package"
			],
			[
				"jas",
				"Set Syntax: JavaScript"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"java sc",
				"Set Syntax: JavaScript"
			],
			[
				"set mat",
				"Set Syntax: MATLAB"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"Markdown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"INstal",
				"Package Control: Install Package"
			],
			[
				"make",
				"Set Syntax: Makefile Plus"
			],
			[
				"mak",
				"Build With: Make"
			],
			[
				"C++",
				"Set Syntax: C++11"
			],
			[
				"lower",
				"Convert Case: Lower Case"
			],
			[
				"Matl",
				"Set Syntax: MATLAB"
			],
			[
				"java",
				"Set Syntax: Java"
			],
			[
				"M",
				"Set Syntax: MATLAB"
			],
			[
				"Ma",
				"Set Syntax: MATLAB"
			],
			[
				"Mat",
				"Set Syntax: MATLAB"
			],
			[
				"ma",
				"Set Syntax: MATLAB"
			],
			[
				"MAt",
				"Set Syntax: MATLAB"
			],
			[
				"mat",
				"Set Syntax: MATLAB"
			],
			[
				"matl",
				"Set Syntax: MATLAB"
			],
			[
				"cuda",
				"Set Syntax: CUDA C++"
			],
			[
				"INsta",
				"Package Control: Install Package"
			],
			[
				"MAT",
				"Set Syntax: MATLAB"
			]
		],
		"width": 617.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Repositories/SimpleCFramework",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines/src",
		"/D/Repositories/SimpleCFramework/SequenceAlignment",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src",
		"/D/Repositories/SimpleCFramework/src"
	],
	"file_history":
	[
		"/D/Repositories/SimpleCFramework/src/simple_flag.h",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines/src/FGrammar.c",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FScore.c",
		"/D/Repositories/SimpleCFramework/src/simple.minimal.h",
		"/D/Repositories/SimpleCFramework/src/simple.h",
		"/D/Repositories/SimpleCFramework/src/simple_miscellaneous.h",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines/make.bat",
		"/D/Repositories/SimpleCFramework/DecayClosure/src/FChannel.c",
		"/D/Repositories/SimpleCFramework/DecayClosure/src/FParticle.c",
		"/D/Repositories/SimpleCFramework/deps/GLFW/glfw3.h",
		"/D/Repositories/SimpleCFramework/deps/GLFW/glfw3native.h",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/SequenceAlignment.c",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FAlignment.c",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FSequence.c",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FWeight.c",
		"/D/Repositories/SimpleCFramework/src/simple_collection.c",
		"/D/Repositories/SimpleCFramework/src/simple_flag.c",
		"/D/Repositories/SimpleCFramework/src/simple_miscellaneous.c",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines/src/FRule.h",
		"/D/Repositories/SimpleCFramework/GraphMatch/make.bat",
		"/D/Repositories/SimpleCFramework/DecayClosure/DecayClosure.c",
		"/D/Repositories/SimpleCFramework/src/simple_automaton.c",
		"/D/Repositories/SimpleCFramework/src/simple_automaton.h",
		"/D/Repositories/SimpleCFramework/LanguagesAndMachines/Diffusion.c",
		"/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.h",
		"/D/Repositories/SimpleCFramework/src/simple_collection.h",
		"/D/Repositories/SimpleCFramework/DecayClosure/src/FParticle.h",
		"/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.c",
		"/D/Repositories/SimpleCFramework/tests/Tests.c",
		"/D/Repositories/SimpleCFramework/tests/test.bat",
		"/D/Repositories/SimpleCFramework/DecayClosure/src/FChannel.h",
		"/D/Repositories/SimpleCFramework/src/simple_display.h",
		"/D/Repositories/SimpleCFramework/src/simple_network.h",
		"/D/Repositories/SimpleCFramework/src/simple_serialize.h",
		"/D/Repositories/SimpleCFramework/src/simple_thread.h",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FSequence.h",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FAlignment.h",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FScore.h",
		"/D/Repositories/SimpleCFramework/SequenceAlignment/src/FWeight.h",
		"/D/Repositories/SimpleCFramework/src/simple_allocate.c",
		"/C/Users/Gebruiker/Desktop/GenerateAlignments.c",
		"/D/Repositories/SimpleCFramework/src/simple_serialize.c",
		"/D/Repositories/SimpleCFramework/DecayClosure/make.bat",
		"/C/Users/Gebruiker/Desktop/WorkingOnEventHandling.c",
		"/C/Users/Gebruiker/Desktop/FSubjectTemplate.c",
		"/D/Repositories/SimpleCFramework/src/simple_allocate.h",
		"/D/Repositories/SimpleCFramework/src/simple_event.h",
		"/D/Repositories/SimpleCFramework/src/simple_event.c",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/src/FParticle.h",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/src/FChannel.h",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/DecayEnclosure.c",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/src/ParticleDB.c",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/src/FParticle.c",
		"/D/Repositories/SimpleCFramework/DecayEnclosure/make.bat",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FAlignment.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FSequence.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FScore.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_miscellaneous.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FWeight.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_automaton.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_display.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_allocate.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_thread.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_serialize.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_network.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/SequenceAlignment.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_miscellaneous.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_thread.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_allocate.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_automaton.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_display.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_log.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_log.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_network.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FAlignment.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FScore.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/Diffusion/Diffusion.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/GameOfLive/GameOfLife.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/NBodyProblem/NBodyProblem.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FSequence.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/SequenceAlignment/src/FWeight.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_serialize.c",
		"/C/Users/Gebruiker/Desktop/Case Studies/NeuralNetwork/NeuralNetwork.c",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_serializer.h",
		"/C/Users/Gebruiker/Desktop/SimpleFramework/src/simple_serializer.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FWeight.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FScore.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FWeight.h",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FAlignment.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FSequence.h",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FScore.h",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FAlignment.h",
		"/C/Users/Gebruiker/Desktop/FAlignment.h",
		"/D/Repositories/communitysmartgrid/apps/stub.device/stub.device.settings",
		"/D/Repositories/communitysmartgrid/apps/stub.server.analytic.gui/stub.server.analytic.gui.settings",
		"/D/Repositories/communitysmartgrid/rest/app/routes/result_routes.js",
		"/D/Repositories/communitysmartgrid/apps/client.device/client.device.settings",
		"/D/Repositories/communitysmartgrid/apps/server.analytic/server.analytic.settings",
		"/C/Users/Gebruiker/Desktop/SmartServiceCenter/bin/server.analytic.settings",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/FSequence.S2.bin",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/src/simple_random.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FSequence.c",
		"/C/Users/Gebruiker/Desktop/Case Studies/NeuralNetwork/FConvNet.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/make.bat",
		"/C/Users/Gebruiker/Desktop/WorkingOnRefTrackerSerializer.c",
		"/C/Users/Gebruiker/Desktop/Case Studies/NeuralNetwork/FConvNet.h",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/src/simple_serializer.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/src/simple_serializer.h",
		"/D/Online/Dropbox/CG/Raytracer/image.h",
		"/D/Online/Dropbox/Current Projects/JavaScript/templater/templates.js",
		"/D/Online/Dropbox/Current Projects/ParsArgs.c",
		"/D/Online/Dropbox/Current Projects/Custom C Package/Data/Data.c",
		"/D/Online/Dropbox/Current Projects/Custom C Package/Alignment/alignment.c",
		"/D/Online/Dropbox/Current Projects/Custom C Package/Hog/HOG.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/src/FMatrix.h",
		"/C/Users/Gebruiker/Desktop/Case Studies/ParticleDB/FParticle.h",
		"/C/Users/Gebruiker/Desktop/Case Studies/ParticleDB/simple_serializer.h",
		"/C/Users/Gebruiker/Desktop/Case Studies/ParticleDB/simple_serializer.c",
		"/C/Users/Gebruiker/Desktop/Case Studies/ParticleDB/ParticleDB.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/FSequence.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/NBodyProblem/make.bat",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/GameOfLive/make.bat",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/Diffusion/make.bat",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/SequenceAlignment.c",
		"/C/Users/Gebruiker/Desktop/Scientific Computing/SequenceAlignment/FSequence.h",
		"/D/Repositories/OpenParticleDatabase/rest/app/routes/index.js",
		"/D/Repositories/OpenParticleDatabase/rest/server.js",
		"/D/Repositories/OpenParticleDatabase/rest/app/routes/channel_routes.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"D:\\Repositories\\SimpleCFramework,-simple_allocate.c",
			"D:\\Repositories\\SimpleCFramework",
			"C:\\Users\\Gebruiker\\Desktop\\MonteCarlo,C:\\Users\\Gebruiker\\Desktop\\SimpleFramework,D:\\Repositories\\SimpleCFramework",
			"C:\\Users\\Gebruiker\\Desktop\\MonteCarlo,C:\\Users\\Gebruiker\\Desktop\\SimpleFramework",
			"C:\\Users\\Gebruiker\\Desktop\\MonteCarlo",
			"D:\\Projects\\Games\\Samples\\StrategyGame\\Source",
			"D:\\Projects\\Games\\Samples\\StrategyGame\\Source\\StrategyGame"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"SFree",
			"free",
			"FContextFreeGrammar",
			"FCFG",
			"FContextFreeGrammar",
			"NewFContextFreeGrammar",
			"FContextFreeGrammar",
			"FParticle",
			"FGrammar",
			"FParticle",
			"NBITSBYTE",
			"oLast",
			"oFirst",
			"_ptrLast",
			"oFirst",
			"FParticle",
			"oInto",
			"oInto, unsigned int* ptrSize",
			"oInto",
			"oMe",
			"oMe, unsigned int nSize",
			"FParticle",
			"sString",
			"ptrFrom",
			"ptrTo",
			"oDeserialize",
			"oSerialize",
			"oDeserialize",
			"oSerialize",
			"oDeserialize",
			"oSerialize",
			"oDeserialize",
			"Fx_",
			"malloc",
			"MemoryString",
			"FChannel",
			"<Subject>",
			"ptrWhat, unsigned int eType), unsigned int bSet)",
			"ptrWhat, unsigned int eType))",
			"(void* ptrWhat, unsigned int eType));",
			"(void* ptrWhat, unsigned int eType))",
			"unsigned int On",
			"simple_serializer",
			"nColumns",
			"nLength",
			"iLenght",
			"nLength",
			"nLenght",
			"iLenght",
			"NSYMS",
			"ACT_MISMATCH",
			"ACT_INSERT",
			"ACT_DELETE",
			"ACT_MATCH",
			"int",
			"iTemp",
			"iMin",
			"iMax",
			"oSequence",
			"oWeight",
			"nSymbols",
			"nMin",
			"FScore",
			"nLength",
			"FAlignment",
			"char",
			"lCompact",
			"FSequence",
			"lData",
			"FScore",
			"oScore",
			"FScore",
			"FConvNet",
			"FConvNeuron",
			"nM",
			"nN",
			"oMatrix",
			"SEQ",
			"SEQUENCE",
			"CODON",
			"particle",
			"Particle",
			"channel",
			"Channel",
			"particle",
			"result",
			"sFileResults",
			"nResults",
			"FTN",
			"FTask",
			"FTN",
			"FTask",
			"Faculty",
			"NewSampleBuffer",
			"NewFTNBuffer",
			"oCopyTo",
			"oCopyFrom",
			"RRand",
			"FT0",
			"iTest",
			"FT0",
			"iParticle",
			"FParticle",
			"FChannel",
			"FParticle",
			"FChannel",
			"FParticle",
			",\n",
			"}\n",
			"FData",
			"FMeta",
			"FHeader",
			"oMeta",
			"ptrPointer",
			"oDataWrite",
			"ptrData",
			"oDataWriteRead",
			"oData",
			"oSerialize",
			"oData",
			"oMeta",
			"oHeadersData",
			"\\lib\\",
			"\\n",
			"symbol",
			"symbole",
			"stack",
			"state"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SFree",
			"FCFG",
			"FCFGrammar",
			"FCFG",
			"NewFCFG",
			"FRule",
			"FContextFreeGrammar",
			"FGrammar",
			"NBYTEBITS",
			"oFirst",
			"oLast",
			"_ptrSecondLast",
			"oLast",
			"FChannel",
			"lInto",
			"lInto, unsigned int* ptrSize",
			"lInto",
			"lMe",
			"lMe, unsigned int nSize",
			"FChannel",
			"sMe",
			"ptrMe",
			"ptrInto",
			"oInto",
			"oMe",
			"oInto",
			"oMe",
			"oInto",
			"oMe",
			"oInto",
			"_",
			"NewString",
			"FParticle",
			"Subject",
			"ptrWhat, unsigned int eType), unsigned int eEvent, unsigned int bSet)",
			"ptrWhat, unsigned int eType), unsigned int bSet)",
			"(void* ptrWhat, unsigned int eType), unsigned int bSet);",
			"(void* ptrWhat, unsigned int eType), unsigned int bSet)",
			"void On",
			"simple_serialize",
			"nColumn",
			"nA",
			"iA",
			"nL",
			"iL",
			"ACT_MISMATCHF",
			"ACT_INSERTF",
			"ACT_DELETEF",
			"ACT_MATCHF",
			"iMin",
			"iMax",
			"iTemp",
			"oMe",
			"oAlignment",
			"nMin",
			"nSymbols",
			"FWeight",
			"nSymbols",
			"FWeight",
			"int",
			"short",
			"int",
			"lData",
			"FAlignment",
			"lCompact",
			"FSequence",
			"lNew",
			"FSequence",
			"FScore",
			"nMax",
			"nMin",
			"oScore",
			"ALG",
			"ALIGNMENT",
			"TRIPLE",
			"result",
			"Result",
			"particle",
			"Particle",
			"channel",
			"particle",
			"sFileClasses",
			"nClasses",
			"FConvNet",
			"FConvNeuron",
			"FConvNet",
			"FConvNeuron",
			"Factorial",
			"SampleBuffer",
			"NewSampleBuffer",
			"lCopyTo",
			"lCopyFrom",
			"RandR",
			"FTN",
			"iTask",
			"FTask",
			"iTest",
			"FT0",
			"FTask",
			"FSubject",
			"FDisorder",
			"FChannel",
			"FParticle",
			"_FHeader",
			"lMeta",
			"ptrRaw",
			"oSerialize",
			"oToPrint",
			"ptrTo",
			"oDataRead",
			"oDataWrite",
			"oData",
			"oDeserialize",
			"oSerialize",
			"oHeadersName",
			"./lib/",
			" \\\\lib\\\\",
			" \\lib\\",
			" ",
			"state",
			"symbol",
			"symbole_stack",
			"symbole",
			"state",
			"idft",
			"dft",
			"(u, v)",
			"DataTensor"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "LanguagesAndMachines/LanguagesAndMachines.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								171,
								171
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "LanguagesAndMachines/src/FGrammar.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 956,
						"regions":
						{
						},
						"selection":
						[
							[
								171,
								178
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 499,
						"regions":
						{
						},
						"selection":
						[
							[
								200,
								200
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/Gebruiker/Desktop/TemplateNewFreeSerialize.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1027,
						"regions":
						{
						},
						"selection":
						[
							[
								392,
								392
							]
						],
						"settings":
						{
							"syntax": "Packages/C Improved/C Improved.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.490362296018,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 124.0
	},
	"pinned_build_system": "",
	"project": "ScientificComputing.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 239.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
